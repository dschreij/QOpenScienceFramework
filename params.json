{
  "name": "Qopenscienceframework",
  "tagline": "PyQt widgets for working with the Open Science Framework API",
  "body": "![Install with conda](https://anaconda.org/cogsci/python-qosf/badges/installer/conda.svg)\r\n![Anaconda cloud](https://anaconda.org/cogsci/python-qosf/badges/version.svg)\r\n\r\n# Open Science Framework - Python API toolkit\r\nThis repository should contain everything you need to start off with connecting your python application to the Open Science Framework (https://osf.io). It offers python functions that translate to Open Science Framework API endpoints, and also a set of PyQt widgets (should work with both pyqt4 and pyqt5 thanks to qtpy) that are designed to display and interact with information obtained through the OSF API.\r\n\r\n## Installation\r\nMake sure you have the following modules available (all should be easy to get with anaconda and/or pip)\r\n\r\n- pyqt4 or pyqt5 (https://www.riverbankcomputing.com/software/pyqt/intro)\r\n- qtpy (https://github.com/spyder-ide/qtpy)\r\n- qtawesome (https://github.com/spyder-ide/qtawesome)\r\n- requests_oauthlib (https://github.com/requests/requests-oauthlib)\r\n- fileinspector (https://github.com/dschreij/fileinspector)\r\n- arrow (http://crsmithdev.com/arrow/)\r\n- humanize (https://pypi.python.org/pypi/humanize)\r\n- python-magic (optional)\r\n\r\n## Running\r\nIf you have all above modules installed, you should be able to perform a test run with\r\n\r\n    python example.py\r\n\r\nThis should load and display all widgets that can be used.\r\n\r\nMore documentation will soon follow\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}